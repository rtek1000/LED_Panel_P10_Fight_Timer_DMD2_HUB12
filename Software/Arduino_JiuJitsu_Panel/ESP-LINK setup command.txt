https://github.com/jeelabs/esp-link/blob/master/FLASHING.md#initial-serial-flashing

4Mbit / 512Kbyte module

For Release 3.2.47 alpha Pre-release:
python esptool.py --port /dev/ttyUSB0 --baud 115200 write_flash -fs 4m -ff 40m 0x00000 boot_v1.7.bin 0x1000 user1.bin 0x7C000 esp_init_data_default.bin 0x7E000 blank.bin
python esptool.py --port /dev/ttyUSB1 --baud 115200 write_flash -fs 4m -ff 40m 0x00000 boot_v1.7.bin 0x1000 user1.bin 0x7C000 esp_init_data_default.bin 0x7E000 blank.bin

The esp-link firmware connects a micro-controller to the internet using an ESP8266 Wifi module. It implements a number of features:

- transparent bridge between Wifi and serial, useful for debugging or inputting into a uC
- flash-programming attached Arduino/AVR microcontrollers and LPC800-series and other ARM microcontrollers via Wifi
- built-in stk500v1 programmer for AVR uC's: program using HTTP upload of hex file
- outbound REST HTTP requests from the attached micro-controller to the internet
- MQTT client pub/sub from the attached micro-controller to the internet
- serve custom web pages containing data that is dynamically pulled from the attached uC and that contain buttons and fields that are transmitted to the attached uC (feature not fully ready yet)

For flash-programming (OTA):
Service mDNS (enabled): arduino

Arduino IDE board: Arduino Uno Wifi

Hardware configuration for normal operation
This firmware is designed for any esp8266 module. The recommended connections for an esp-01 module are:

- URXD: connect to TX of microcontroller
- UTXD: connect to RX of microcontroller
- GPIO0: connect to RESET of microcontroller
- GPIO2: optionally connect green LED to 3.3V (indicates wifi status)
